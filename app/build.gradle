// incompatible API changes
def versionMajor = 2
// added functionality in a backwards-compatible manner, must be <=99
def versionMinor = 18
// backwards-compatible bug fixes, must be <=99
def versionPatch = 5
// bump for dogfood builds, public betas, etc., must be <=99
def versionBuild = 0


apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'idea'
apply plugin: 'org.robolectric'
apply plugin: 'com.github.ben-manes.versions'

configurations {
    apt
}

android {
    compileSdkVersion 22
    buildToolsVersion '21.1.2'

    packagingOptions {
        // prevents Error: duplicate files during packaging of APK
        // no wildcard support yet
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'LICENSE.txt'
    }

    // This is important, it will run lint checks but won't abort build
    lintOptions {
        abortOnError false
    }


    defaultConfig {
        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild

        if (versionBuild != 0) {
            versionName "${versionMajor}.${versionMinor}.${versionPatch}-${versionBuild}"
        } else {
            versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        }

        minSdkVersion 9
        targetSdkVersion 22

        applicationId "de.ironjan.mensaupb"
    }


    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
        }

        androidTest.setRoot('src/test')
    }

    buildTypes {
        debug {
            buildConfigField "int", "SYNC_INTERVAL", "60" // 1 minute
            buildConfigField "String", "STW_URL", "\"\""
            testCoverageEnabled = true
        }

        release {
            buildConfigField "int", "SYNC_INTERVAL", "60 * 60 * 24 " // 1 day
            buildConfigField "String", "STW_URL", "\"\""
        }

        println "Applied basic configurations."
    }

    // must be set after basic configurations
    if (project.hasProperty("mensaupb.signing")) {
        println "project has property mensaupb.signing:"
        println project.property("mensaupb.signing")
        if (new File(project.property("mensaupb.signing")).exists()) {
            apply from: project.property("mensaupb.signing");
            println "Applied properties"
        } else {
            println "Could not find signing config";
        }
    } else {
        println "Could not find signing property.";
    }

}

dependencies {
    compile 'com.android.support:support-v4:22.0.0'
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    apt "org.androidannotations:androidannotations:3.3"
    compile 'org.androidannotations:androidannotations-api:3.3'
    compile 'com.noveogroup.android:android-logger:1.3.5'
    compile 'se.emilsjolander:stickylistheaders:2.7.0'
    compile 'com.koushikdutta.ion:ion:2.1.6'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.6.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.1'
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.1'
    compile 'org.springframework.android:spring-android-rest-template:1.0.1.RELEASE'
    compile 'com.github.piwik:piwik-sdk-android:v0.0.1'

    compile fileTree(dir: 'libs', include: '*.jar')

    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.robolectric:shadows-support-v4:3.0'
    // Repetition for autocompletion in android studio
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.robolectric:shadows-support-v4:3.0'
}

robolectric {
    include '**/*Test.class'
    maxHeapSize = "2048m"
}

